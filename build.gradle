buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur',    version: '1.2.1'
        classpath group: 'gradle.plugin.com.matthewprenger',    name: 'CurseGradle', version: '1.4.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'

// This initializes the config. Please try to modify the variables in the config file, if needed, add more if you see a reason to.
ext.config = parseConfig(file('build.properties'))

version = config.VERSION
group = "${config.GROUP}.${config.ARTIFACT}"
archivesBaseName = "${config.ARCHIVES_BASE_NAME}-${config.MINECRAFT_VERSION}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: config.MAPPINGS_CHANNEL, version: config.MAPPINGS_VERSION

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=infernal-expansion.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                infernalexp {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=infernal-expansion.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                infernalexp {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'infernalexp', '--all', '--output', file('src/generated/resources/')
            mods {
                infernalexp {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.MINECRAFT_VERSION}-${config.FORGE_VERSION}"
}


jar {
    manifest {
        attributes([
                'Specification-Title'   : config.TITLE,
                'Specification-Vendor'  : config.AUTHOR,
                'Specification-Version' : '1',
                'Implementation-Title'  : config.TITLE,
                'Implementation-Version': config.VERSION,
                'Implementation-Vendor' : config.AUTHOR,
                'MixinConfigs'          : 'infernal-expansion.mixins.json',
                'MixinConnector'        : 'org.infernalstudios.infernalexp.mixin.MixinConnector'
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = config.GROUP
            artifactId = config.ARTIFACT
            artifact jar

            pom {
                name = 'Mining Master'
                url = 'https://infernalstudios.org/mining-master'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/infernalexp/Mining-Master.git'
                    url = 'https://github.com/infernalexp/Mining-Master'
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://maven.infernalstudios.org/releases'

            
            credentials {
                username = System.getenv('MAVEN_USER')
                password = System.getenv('MAVEN_TOKEN')
            }
            
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

// Modrinth publishing
import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    onlyIf {
        System.getenv('MODRINTH')
    }

    token = System.getenv('MODRINTH')
    projectId = 'Xu8V0UlK'
    versionNumber = project.version
    versionName = "Mining Master Release ${project.version}"
    uploadFile = jar
    addGameVersion(config.MINECRAFT_VERSION)
    addLoader('forge')
}

// Curseforge publishing
curseforge {
  apiKey = System.getenv('CURSEFORGE') ?: 'If you\'re seeing this, you haven\'t set your "CURSEFORGE" environment variable'
  
  project {
    id = '534956'
    changelog = 'No changelog specified.'
    releaseType = 'release'
    addGameVersion config.MINECRAFT_VERSION
    mainArtifact (jar) { 
      displayName = "Mining Master Release ${project.version}"
    }
  }
}


// Config parse function
def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

